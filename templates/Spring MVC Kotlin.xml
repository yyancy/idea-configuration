<templateSet group="Spring MVC Kotlin">
  <template name="reqm" value="@org.springframework.web.bind.annotation.RequestMapping(path = &quot;$PATH$&quot;, method = $HTTP_METHOD$)&#10;fun $METHOD_NAME$(): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@RequestMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="HTTP_METHOD" expression="" defaultValue="&quot;org.springframework.web.bind.annotation.RequestMethod.GET&quot;" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'request' + _1.capitalize() else return 'request';&quot;, RETURN_TYPE);" defaultValue="&quot;request&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="getm" value="@org.springframework.web.bind.annotation.GetMapping(&quot;$PATH$&quot;)&#10;fun $METHOD_NAME$(): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@GetMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'get' + _1.capitalize() else return 'get';&quot;, RETURN_TYPE);" defaultValue="&quot;get&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="deletem" value="@org.springframework.web.bind.annotation.DeleteMapping(&quot;$PATH$&quot;)&#10;fun $METHOD_NAME$(id: $ID$): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@DeleteMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'delete' + _1.capitalize() else return 'delete';&quot;, RETURN_TYPE);" defaultValue="&quot;delete&quot;" alwaysStopAt="true" />
    <variable name="ID" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="patchm" value="@org.springframework.web.bind.annotation.PatchMapping(&quot;$PATH$&quot;)&#10;fun $METHOD_NAME$(@org.springframework.web.bind.annotation.RequestBody $BODY_NAME$: $BODY_TYPE$): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@PatchMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'patch' + _1.capitalize() else return 'patch';&quot;, RETURN_TYPE);" defaultValue="&quot;patch&quot;" alwaysStopAt="true" />
    <variable name="BODY_TYPE" expression="" defaultValue="RETURN_TYPE" alwaysStopAt="true" />
    <variable name="BODY_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return _1.uncapitalize() else return 'value';&quot;, BODY_TYPE);" defaultValue="&quot;value&quot;" alwaysStopAt="false" />
    <context />
  </template>
  <template name="postm" value="@org.springframework.web.bind.annotation.PostMapping(&quot;$PATH$&quot;)&#10;fun $METHOD_NAME$(@org.springframework.web.bind.annotation.RequestBody $BODY_NAME$: $BODY_TYPE$): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@PostMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'post' + _1.capitalize() else return 'post';&quot;, RETURN_TYPE);" defaultValue="&quot;post&quot;" alwaysStopAt="true" />
    <variable name="BODY_TYPE" expression="" defaultValue="RETURN_TYPE" alwaysStopAt="true" />
    <variable name="BODY_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return _1.uncapitalize() else return 'value';&quot;, BODY_TYPE);" defaultValue="&quot;value&quot;" alwaysStopAt="false" />
    <context />
  </template>
  <template name="putm" value="@org.springframework.web.bind.annotation.PutMapping(&quot;$PATH$&quot;)&#10;fun $METHOD_NAME$(@org.springframework.web.bind.annotation.RequestBody $BODY_NAME$: $BODY_TYPE$): org.springframework.http.ResponseEntity&lt;$RETURN_TYPE$&gt; {&#10;    $END$&#10;}" description="Spring MVC '@PutMapping' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="/" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return 'put' + _1.capitalize() else return 'put';&quot;, RETURN_TYPE);" defaultValue="&quot;put&quot;" alwaysStopAt="true" />
    <variable name="BODY_TYPE" expression="" defaultValue="RETURN_TYPE" alwaysStopAt="true" />
    <variable name="BODY_NAME" expression="groovyScript(&quot;import org.apache.commons.lang3.StringUtils; if(StringUtils.isAlpha(_1)) return _1.uncapitalize() else return 'value';&quot;, BODY_TYPE);" defaultValue="&quot;value&quot;" alwaysStopAt="false" />
    <context />
  </template>
  <template name="controller" value="@org.springframework.stereotype.Controller&#10;@org.springframework.web.bind.annotation.RequestMapping(&quot;$PATH$&quot;)&#10;class $CLASS_NAME$ {&#10;$END$&#10;}" description="Spring '@Controller' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="groovyScript(&quot;_1+'Controller';&quot;, capitalize(camelCase(fileNameWithoutExtension())));" defaultValue="MyController" alwaysStopAt="true" />
    <context />
  </template>
  <template name="restController" value="@org.springframework.web.bind.annotation.RestController&#10;@org.springframework.web.bind.annotation.RequestMapping(&quot;$PATH$&quot;)&#10;class $CLASS_NAME$ {&#10;$END$&#10;}" description="Spring '@Controller' template" toReformat="true" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="groovyScript(&quot;_1+'RestController';&quot;, capitalize(camelCase(fileNameWithoutExtension())));" defaultValue="MyRestController" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exceptionHandler" value="@org.springframework.web.bind.annotation.ExceptionHandler&#10;fun $METHOD_NAME$(ex: java.io.IOException): org.springframework.http.ResponseEntity&lt;$TYPE$&gt; {&#10;  $END$&#10;}" description="Spring `@ExceptionHandler` template" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;String&quot;" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="" defaultValue="&quot;handle&quot;" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>